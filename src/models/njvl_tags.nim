# Generated by tools/gen_tags.nim from doc/tags.md. DO NOT EDIT!

import tags

type
  NjvlKind* = enum
    NoVTag
    StoreV = (ord(StoreTagId), "store")  ## `asgn` with reversed operands that reflects evaluation order
    ContinueV = (ord(ContinueTagId), "continue")  ## `continue` statement
    IteV = (ord(IteTagId), "ite")  ## if-then-else followed by `join` information followed by an optional label
    ItecV = (ord(ItecTagId), "itec")  ## if-then-else (that was a `case`)
    LoopV = (ord(LoopTagId), "loop")  ## `loop` components are (before-cond, cond, loop-body, after)
    VV = (ord(VTagId), "v")  ## `versioned` locations
    UnknownV = (ord(UnknownTagId), "unknown")  ## location's contents is unknown at this point
    JtrueV = (ord(JtrueTagId), "jtrue")  ## set variables v1, v2, ... to `(true)`; hint this should become a jump
    CfvarV = (ord(CfvarTagId), "cfvar")  ## declare a new control flow variable `D` of type `bool` initialized to `false`
    KillV = (ord(KillTagId), "kill")  ## some.var is about to disappear (scope exit)
    AssumeV = (ord(AssumeTagId), "assume")  ## `assume` pragma/annotation
    AssertV = (ord(AssertTagId), "assert")  ## `assert` pragma/annotation

proc rawTagIsNjvlKind*(raw: TagEnum): bool {.inline.} =
  raw in {StoreTagId, ContinueTagId, IteTagId, ItecTagId, LoopTagId, VTagId, UnknownTagId, JtrueTagId, CfvarTagId, KillTagId, AssumeTagId, AssertTagId}

