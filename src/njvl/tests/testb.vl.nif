(stmts
 (proc :echo.0 . . .
  (params
   (param :msg.0 . .
    (ptr
     (array
      (i +8))) .)) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar))))
 (proc :test1.0 . . .
  (params) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar)
    (cfvar)
    (var :a.0 . .
     (bool)
     (false))
    (loop
     (stmts
      (cfvar))
     (not ´g.1)
     (stmts
      (ite
       (v a.0 +0)
       (stmts
        (jtrue ´g.1))
       (stmts
        (call echo.0 "after if without else"))
       (stmts))
      (continue .)
      (continue)))
    (kill a.0)
    (kill a.0))))
 (proc :test2.0 . . .
  (params) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar)
    (cfvar)
    (var :a.0 . .
     (bool)
     (false))
    (loop
     (stmts
      (cfvar))
     (not ´g.1)
     (stmts
      (ite
       (v a.0 +2)
       (stmts
        (jtrue ´g.1))
       (ite
        (not ´g.1)
        (stmts
         (call echo.0 "explicit else")) .
        (stmts))
       (stmts))
      (ite
       (not ´g.1)
       (stmts
        (call echo.0 "after if with else")) .
       (stmts))
      (continue .)
      (continue)))
    (kill a.0)
    (kill a.0))))
 (proc :test3.0 . . .
  (params) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar)
    (cfvar)
    (var :a.0 . .
     (bool)
     (false))
    (var :b.0 . .
     (bool)
     (true))
    (loop
     (stmts
      (cfvar))
     (not ´g.1)
     (stmts
      (ite
       (v a.0 +4)
       (stmts
        (ite
         (v b.0 +0)
         (stmts
          (jtrue ´g.1))
         (stmts
          (call echo.0 "after inner if"))
         (stmts))) .
       (stmts))
      (ite
       (not ´g.1)
       (stmts
        (call echo.0 "after outer if")) .
       (stmts))
      (continue .)
      (continue)))
    (kill a.0)
    (kill b.0)
    (kill b.0)
    (kill a.0))))
 (proc :test4.0 . . .
  (params) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar)
    (cfvar)
    (var :a.0 . .
     (bool)
     (false))
    (var :b.0 . .
     (bool)
     (true))
    (var :c.0 . .
     (bool)
     (false))
    (loop
     (stmts
      (cfvar))
     (not ´g.1)
     (stmts
      (ite
       (v a.0 +6)
       (stmts
        (ite
         (v b.0 +2)
         (stmts
          (ite
           (v c.0 +0)
           (stmts
            (jtrue ´g.1))
           (stmts
            (call echo.0 "level 2 after"))
           (stmts))) .
         (stmts))
        (ite
         (not ´g.1)
         (stmts
          (call echo.0 "level 1 after")) .
         (stmts))) .
       (stmts))
      (ite
       (not ´g.1)
       (stmts
        (call echo.0 "level 0 after")) .
       (stmts))
      (continue .)
      (continue)))
    (kill a.0)
    (kill c.0)
    (kill b.0)
    (kill b.0)
    (kill a.0)
    (kill c.0))))
 (proc :test5.0 . . .
  (params) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar)
    (cfvar)
    (var :a.0 . .
     (bool)
     (false))
    (ite
     (v a.0 +8)
     (stmts
      (jtrue ´r.0))
     (stmts
      (call echo.0 "after return if"))
     (stmts))
    (kill a.0)
    (kill a.0))))
 (proc :test6.0 . . .
  (params) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar)
    (cfvar)
    (var :a.0 . .
     (bool)
     (false))
    (loop
     (stmts
      (cfvar))
     (not ´g.1)
     (stmts
      (ite
       (v a.0 +9)
       (stmts
        (jtrue ´g.1))
       (stmts
        (call echo.0 "stmt1")
        (call echo.0 "stmt2")
        (call echo.0 "stmt3"))
       (stmts))
      (continue .)
      (continue
       (join a.0 +10 +9 +0))))
    (kill a.0)
    (kill a.0))))
 (proc :test7.0 . . .
  (params) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar)
    (cfvar)
    (var :a.0 . .
     (bool)
     (false))
    (var :b.0 . .
     (bool)
     (true))
    (loop
     (stmts
      (cfvar))
     (not ´g.1)
     (stmts
      (ite
       (v a.0 +11)
       (stmts
        (ite
         (v b.0 +5)
         (stmts
          (jtrue ´g.1))
         (ite
          (not ´g.1)
          (stmts
           (call echo.0 "inner else")) .
          (stmts))
         (stmts))
        (ite
         (not ´g.1)
         (stmts
          (call echo.0 "after inner if-else")) .
         (stmts)))
       (stmts
        (call echo.0 "after outer if"))
       (stmts))
      (continue .)
      (continue
       (join b.0 +6 +5 +0)
       (join a.0 +12 +11 +0))))
    (kill a.0)
    (kill b.0)
    (kill b.0)
    (kill a.0))))
 (proc :test8.0 . . .
  (params) . . .
  (stmts
   (stmts
    (cfvar)
    (cfvar)
    (cfvar)
    (var :a.0 . .
     (bool)
     (false))
    (cfvar)
    (ite
     (v a.0 +13)
     (stmts
      (jtrue ´g.1))
     (stmts
      (call echo.0 "after block break"))
     (stmts))
    (kill a.0)
    (kill a.0))))
 (kill msg.0)
 (kill msg.0))