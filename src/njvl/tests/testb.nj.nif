(stmts
 (proc :echo.0 . . .
  (params
   (param :msg.0 . .
    (ptr
     (array
      (i +8))) .)) . . .
  (stmts
   (cfvar :´r.0)))
 (proc :test1.0 . . .
  (params) . . .
  (stmts
   (cfvar :´r.0)
   (cfvar :´r.0)
   (var :a.0 . .
    (bool)
    (false))
   (loop
    (stmts
     (cfvar :´g.1))
    (not ´g.1)
    (stmts
     (ite a.0
      (stmts
       (jtrue ´g.1))
      (stmts
       (ite
        (not ´g.1)
        (stmts
         (call echo.0 "after if without else")) .)))
     (continue .)))
   (kill a.0)))
 (proc :test2.0 . . .
  (params) . . .
  (stmts
   (cfvar :´r.0)
   (cfvar :´r.0)
   (var :a.0 . .
    (bool)
    (false))
   (loop
    (stmts
     (cfvar :´g.1))
    (not ´g.1)
    (stmts
     (ite a.0
      (stmts
       (jtrue ´g.1))
      (ite
       (not ´g.1)
       (stmts
        (stmts
         (call echo.0 "explicit else"))) .))
     (ite
      (not ´g.1)
      (stmts
       (call echo.0 "after if with else")) .)
     (continue .)))
   (kill a.0)))
 (proc :test3.0 . . .
  (params) . . .
  (stmts
   (cfvar :´r.0)
   (cfvar :´r.0)
   (var :a.0 . .
    (bool)
    (false))
   (var :b.0 . .
    (bool)
    (true))
   (loop
    (stmts
     (cfvar :´g.1))
    (not ´g.1)
    (stmts
     (ite a.0
      (stmts
       (ite b.0
        (stmts
         (jtrue ´g.1))
        (stmts
         (ite
          (not ´g.1)
          (stmts
           (call echo.0 "after inner if")) .)))) .)
     (ite
      (not ´g.1)
      (stmts
       (call echo.0 "after outer if")) .)
     (continue .)))
   (kill a.0 b.0)))
 (proc :test4.0 . . .
  (params) . . .
  (stmts
   (cfvar :´r.0)
   (cfvar :´r.0)
   (var :a.0 . .
    (bool)
    (false))
   (var :b.0 . .
    (bool)
    (true))
   (var :c.0 . .
    (bool)
    (false))
   (loop
    (stmts
     (cfvar :´g.1))
    (not ´g.1)
    (stmts
     (ite a.0
      (stmts
       (ite b.0
        (stmts
         (ite c.0
          (stmts
           (jtrue ´g.1))
          (stmts
           (ite
            (not ´g.1)
            (stmts
             (call echo.0 "level 2 after")) .)))) .)
       (ite
        (not ´g.1)
        (stmts
         (call echo.0 "level 1 after")) .)) .)
     (ite
      (not ´g.1)
      (stmts
       (call echo.0 "level 0 after")) .)
     (continue .)))
   (kill a.0 c.0 b.0)))
 (proc :test5.0 . . .
  (params) . . .
  (stmts
   (cfvar :´r.0)
   (cfvar :´r.0)
   (var :a.0 . .
    (bool)
    (false))
   (ite a.0
    (stmts
     (jtrue ´r.0))
    (stmts
     (ite
      (not ´r.0)
      (stmts
       (call echo.0 "after return if")) .)))
   (kill a.0)))
 (proc :test6.0 . . .
  (params) . . .
  (stmts
   (cfvar :´r.0)
   (cfvar :´r.0)
   (var :a.0 . .
    (bool)
    (false))
   (loop
    (stmts
     (cfvar :´g.1))
    (not ´g.1)
    (stmts
     (ite a.0
      (stmts
       (jtrue ´g.1))
      (stmts
       (ite
        (not ´g.1)
        (stmts
         (call echo.0 "stmt1")) .)
       (ite
        (not ´g.1)
        (stmts
         (call echo.0 "stmt2")) .)
       (ite
        (not ´g.1)
        (stmts
         (call echo.0 "stmt3")) .)))
     (continue .)))
   (kill a.0)))
 (proc :test7.0 . . .
  (params) . . .
  (stmts
   (cfvar :´r.0)
   (cfvar :´r.0)
   (var :a.0 . .
    (bool)
    (false))
   (var :b.0 . .
    (bool)
    (true))
   (loop
    (stmts
     (cfvar :´g.1))
    (not ´g.1)
    (stmts
     (ite a.0
      (stmts
       (ite b.0
        (stmts
         (jtrue ´g.1))
        (ite
         (not ´g.1)
         (stmts
          (stmts
           (call echo.0 "inner else"))) .))
       (ite
        (not ´g.1)
        (stmts
         (call echo.0 "after inner if-else")) .)) .)
     (ite
      (not ´g.1)
      (stmts
       (call echo.0 "after outer if")) .)
     (continue .)))
   (kill a.0 b.0)))
 (proc :test8.0 . . .
  (params) . . .
  (stmts
   (cfvar :´r.0)
   (cfvar :´r.0)
   (var :a.0 . .
    (bool)
    (false))
   (cfvar :´g.1)
   (ite a.0
    (stmts
     (jtrue ´g.1))
    (stmts
     (ite
      (not ´g.1)
      (stmts
       (call echo.0 "after block break")) .)))
   (kill a.0))))